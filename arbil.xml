<?xml version="1.0"?>
<!--
 * linorg.xml
 * Created on 10 September 2008, 10:03
 * @author Peter.Withers@mpi.nl
-->
<project name="Linorg" default="compile">
    <target name="setproperties">
        <property name="SRCDIR" value="src/"/>
        <property name="OUTPUTDIR" value="arbil.0.3.x-build/"/>
        <property name="BUILDDIR" value="${OUTPUTDIR}classes"/>
        <property name="LIBDIR" value="${OUTPUTDIR}lib/"/>
    </target>
<!-- start package creation -->
    <path id="ant-deb.classpath">
        <fileset dir="ant-deb-jar/" includes="*.jar"/>
    </path>
    <!-- http://code.google.com/p/ant-deb-task/ -->
    <taskdef name="deb" classname="com.googlecode.ant_deb_task.Deb" classpathref="ant-deb.classpath"/>
    <taskdef name="desktopEntry" classname="com.googlecode.ant_deb_task.DesktopEntry" classpathref="ant-deb.classpath"/>
    <target name="makeDebPackage" depends="signlinorg" description="build the deb file">
        <property name="package.name" value="arbil"/>
        <property name="package.jarname" value="arbil.jar"/>
        <property name="package.iconname" value="arbil128x128.png"/>
        <property name="distributionDirectory" value="${OUTPUTDIR}/distribution"/>
        <mkdir dir="${distributionDirectory}"/>
        <desktopEntry
            toFile="${distributionDirectory}/${package.name}.desktop"
            name="${package.name}"
            comment="Arbil is an application for arranging research material and associated metadata into a format appropriate for archiving."
            exec="java -jar /usr/share/${package.name}/${package.jarname}"
            path="/usr/share/${package.name}/"
            icon="/usr/share/${package.name}/${package.iconname}"
            categories="Utility;FileTools;Java"
        />
        <deb
            todir="${distributionDirectory}"
            package="${package.name}"
            section="devel"
            depends="sun-java5-jre | sun-java6-jre"
        >
            <version upstream="${linorg.current.major}.${linorg.current.minor}" debian="${linorg.current.revision}"/>
            <maintainer name="Peter Withers" email="Peter.Withers@mpi.nl"/>
            <description synopsis="Arbil is an application for arranging research material and associated metadata into a format appropriate for archiving.">
Arbil is an application for arranging research material and associated metadata into a format appropriate for archiving.  Arbil is designed so that it can be used off line in remote locations. The data can be entered at any stage in part or as a whole. When an internet connection is available the work can then be transferred to the main archive via Lamus.

http://www.lat-mpi.eu/tools/imdi/Arbil/
            </description>
            <tarfileset file="${OUTPUTDIR}/${package.jarname}" prefix="usr/share/${package.name}"/>
            <tarfileset file="${SRCDIR}/nl/mpi/arbil/resources/icons/${package.iconname}" prefix="usr/share/${package.name}"/>
            <tarfileset dir="${LIBDIR}" prefix="usr/share/${package.name}/lib">
                <include name="*.jar"/>
            </tarfileset>
            <tarfileset file="${distributionDirectory}/${package.name}.desktop" prefix="usr/share/${package.name}"/>
        </deb>
    </target>
<!-- end package creation -->
    <target name="all" depends="setproperties, clobber, compile, jar, run, getCurrentJnlp" description="clean, build, jar and run">
        <echo message="Ant Java Version: ${ant.java.version}"/>
    </target>
    <target name="clean" description="remove intermediate files" depends="setproperties">
        <delete dir="${BUILDDIR}"/>
        <mkdir dir="${BUILDDIR}"/>
    </target>
    <target name="clobber" description="remove all artifact files" depends="setproperties">
        <delete dir="${OUTPUTDIR}"/>
        <mkdir dir="${OUTPUTDIR}"/>
    </target>
    <!-- target compile (this is included by build.all) -->
    <target name="compile" depends="clean, copyJarFilesToLib, getsvnversion" description="compile the linorg source code to class files">
        <echo message="Compiling Linorg"/>
        <javac target="1.5" debug="on" srcdir="${SRCDIR}" destdir="${BUILDDIR}" includes="nl/mpi/arbil/**.java">
            <classpath>
                <fileset dir="${LIBDIR}" includes="*.jar"/>
            </classpath>
        </javac>
    </target>
    <target name="getCurrentJnlp" depends="setproperties" description="download the current jnlp and applet html from the web server (this is only only used so that the copy in svn is kept up to date)">
        <get src="http://www.mpi.nl/tg/j2se/jnlp/linorg/arbil.jnlp" dest="${SRCDIR}nl/mpi/arbil/arbil.jnlp"/>
        <get src="http://www.mpi.nl/tg/j2se/jnlp/linorg/arbil-testing.jnlp" dest="${SRCDIR}nl/mpi/arbil/arbil-testing.jnlp"/>
        <get src="http://www.mpi.nl/tg/j2se/jnlp/linorg/ArbilApplet.html" dest="${SRCDIR}nl/mpi/arbil/ArbilApplet.html"/>
    </target>
    <target name="getFallbackFiles" depends="setproperties" description="download the latest schema and controlled vocabularies from the web server">
        <!-- these files are only used if the server is not available on the first run and will be replaced by the application as soon as a network connection is available -->
        <mkdir dir="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/"/>
        <!-- get the latest schema -->
        <get src="http://www.mpi.nl/IMDI/Schema/IMDI_3.0.xsd" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/IMDI_3.0.xsd"/>
        <!-- get the latest controlled vocabularies -->
        <get src="http://www.mpi.nl/IMDI/Schema/Actor-FamilySocialRole.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Actor-FamilySocialRole.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Content-PlanningType.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Content-PlanningType.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/MediaFile-Type.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/MediaFile-Type.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Actor-Role.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Actor-Role.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Content-SocialContext.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Content-SocialContext.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/MPI-Languages.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/MPI-Languages.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Actor-Sex.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Actor-Sex.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Content-SubGenre-Discourse.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Content-SubGenre-Discourse.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Source-Format.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Source-Format.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Boolean.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Boolean.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Content-SubGenre-Stimuli.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Content-SubGenre-Stimuli.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Validation-Methodology.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Validation-Methodology.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Content-Channel.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Content-Channel.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Content-SubGenre.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Content-SubGenre.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Validation-Type.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Validation-Type.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Content-EventStructure.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Content-EventStructure.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Content-Subject.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Content-Subject.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/WrittenResource-Derivation.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/WrittenResource-Derivation.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Content-Genre-Discursive.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Content-Genre-Discursive.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Content-Task.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Content-Task.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/WrittenResource-Format.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/WrittenResource-Format.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Content-Genre-Interactional.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Content-Genre-Interactional.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Continents.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Continents.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/WrittenResource-SubType-Annotation.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/WrittenResource-SubType-Annotation.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Content-Genre.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Content-Genre.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Countries.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Countries.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/WrittenResource-SubType.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/WrittenResource-SubType.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Content-Interactivity.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Content-Interactivity.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/ISO639-2Languages.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/ISO639-2Languages.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/WrittenResource-Type.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/WrittenResource-Type.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Content-Involvement.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Content-Involvement.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/LanguagesID.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/LanguagesID.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/Content-Modalities.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/Content-Modalities.xml"/>
        <get src="http://www.mpi.nl/IMDI/Schema/MediaFile-Format.xml" dest="${BUILDDIR}/nl/mpi/arbil/resources/IMDI/FallBack/MediaFile-Format.xml"/>
    </target>
    <target name="copyFilesForXSL" depends="setproperties">
        <!-- TODO: this should be removed and these files used from within the relevent jar file which in turn comes from the maven repository -->
        <copy todir="${BUILDDIR}/nl/mpi/arbil/resources/xsl/">
            <!--<fileset dir="${SRCDIR}mpi/metadata/transformations/xslt">
                <include name="IMDI_3_0_TO_WEB.xsl"/>
            </fileset>-->
            <fileset dir="${SRCDIR}../../../../trunk/src/html/imdi-viewer/">
                <include name="imdi-viewer-open.gif"/>
                <include name="imdi-viewer-closed.gif"/>
                <include name="imdi-viewer.js"/>
                <include name="imdi-viewer.css"/>
                <include name="imdi-viewer.xsl"/>
            </fileset>
            <fileset dir="${SRCDIR}../../../../trunk/webapps/addit/web">
                <include name="additTooltip.js"/>
                <include name="additPopup.js"/>
                <include name="additTooltip.css"/>
            </fileset>
        </copy>
    </target>
    <target name="copyJarFilesToLib" depends="setproperties">
        <mkdir dir="${LIBDIR}"/>
        <copy todir="${LIBDIR}">
                <!-- TODO: this needs to be changed to use the maven repository -->
            <fileset dir="${SRCDIR}../../../../trunk/webapps/lib/">
                <include name="corpusstructure-1.6.1.jar"/>
                <include name="imdiapi-1.0.6.jar"/>
                <include name="log4j-1.2.14.jar"/>
                <include name="saxon8.jar"/>
                <include name="saxon8-dom.jar"/>
                <include name="typecheck.jar"/>
                <include name="xalan-2.6.0.jar"/>
                <include name="xercesImpl-2.9.0.jar"/>
            </fileset>
        </copy>
    </target>
    <target name="jar" depends="setproperties, compile, getFallbackFiles, copyFilesForXSL, copyJarFilesToLib" description="create a Jar file">
        <jar destfile="${OUTPUTDIR}/arbil.jar">
            <fileset dir="${BUILDDIR}" includes="nl/mpi/arbil/**/*.class"/>
            <fileset dir="${SRCDIR}" includes="nl/mpi/arbil/resources/icons/*.png"/>
            <fileset dir="${SRCDIR}" includes="nl/mpi/arbil/resources/html/images/*.png"/>
            <fileset dir="${SRCDIR}" includes="nl/mpi/arbil/resources/html/*.html"/>
            <fileset dir="${SRCDIR}" includes="nl/mpi/arbil/resources/html/help/**/*.*"/>
            <fileset dir="${SRCDIR}" includes="nl/mpi/arbil/resources/templates/*.xml"/>
            <fileset dir="${BUILDDIR}" includes="nl/mpi/arbil/resources/IMDI/FallBack/*.xsd"/>
            <fileset dir="${BUILDDIR}" includes="nl/mpi/arbil/resources/IMDI/FallBack/*.xml"/>
            <fileset dir="${BUILDDIR}" includes="nl/mpi/arbil/resources/xsl/*.*"/>
            <manifest>
                <attribute name="Main-Class" value="nl.mpi.arbil.LinorgFrame"/>
                <attribute name="Class-Path" value="lib/corpusstructure-1.6.1.jar lib/imdiapi-1.0.6.jar lib/log4j-1.2.14.jar lib/saxon8.jar lib/saxon8-dom.jar lib/typecheck.jar lib/xalan-2.6.0.jar lib/xercesImpl-2.9.0.jar" />
                <!--<attribute name="Class-Path" value="lib/corpusstructure.jar lib/imdiapi.jar lib/log4j-1.2.14.jar lib/saxon8.jar lib/saxon8-dom.jar lib/typecheck.jar lib/xalan-2.6.0.jar lib/xercesImpl-2.9.0.jar" />-->
                <!-- <attribute name="Class-Path" value="lib/corpusstructure.jar lib/imdiapi.jar lib/log4j-1.2.14.jar lib/typecheck.jar lib/xalan-2.6.0.jar lib/xercesImpl-2.9.0.jar"/> -->
            </manifest>
        </jar>
    </target>
    <target name="run" description="run the application" depends="setproperties">
        <java classname="nl.mpi.arbil.Linorg" fork="true">
            <classpath>
                <!--<fileset dir="${WEBAPPS_LIB}" includes="*.jar"/>-->
                <!--<filelist dir="${WEBAPPS_LIB}">
                    <file name="imdiapi.jar" />
                    <file name="log4j-1.2.14.jar" />
                    <file name="typecheck.jar" />
                    <file name="xalan-2.7.0.jar" />-->
                    <!--
                    <file name="saxon8-dom4j.jar" />
                    <file name="saxon8-dom.jar" />
                    <file name="saxon8.jar" />
                    <file name="saxon8-xqj.jar" />
                    <file name="saxon-dom-8.7.jar" />
                    <file name="log4j-1.2.9.jar" />
                    <file name="xalan-2.7.0.jar" />                    
                    <file name="xercesImpl-2.9.0.jar" />
                    -->
                    <!--
                    <file name="saxon8-ant.jar" />
                    <file name="saxon8-sql.jar" />
                    <file name="saxon8-jdom.jar" />
                    <file name="saxon8-xom.jar" />
                    <file name="saxon8-xpath.jar" />
                    <file name="xercesImpl.jar" />
                    -->
               <!-- </filelist>-->
                <pathelement location="${OUTPUTDIR}/arbil.jar"/>
            </classpath>
        </java>
    </target>
    <target name="getsvnversion" depends="setproperties">
        <property name="linorg.current.major" value="0"/>
        <property name="linorg.current.minor" value="3"/>
       <!-- <exec executable="svn" output="version.info">
            <arg value="info"/>
        </exec>
        <exec executable="grep" output="version.date">-->
            <!--<arg value="^Revision"/>-->
           <!-- <arg value="^Last Changed Date:"/>
            <arg value="version.info"/>
        </exec>-->
        <!--<exec executable="date" output="version.date" />-->
        <exec outputproperty="linorg.current.revision" executable="svnversion">
            <arg line="-n -c" />
            <arg line="${SRCDIR}nl/mpi/arbil/" />
            <redirector>
                <outputfilterchain>
                    <tokenfilter>
                        <replaceregex pattern="^[0-9]*:" replace="" flags="g"/>
                        <replaceregex pattern="[^0-9]*" replace="" flags="g"/>
                    </tokenfilter>
                </outputfilterchain>
            </redirector>
        </exec>
        <exec outputproperty="linorg.info.all" executable="svn">
            <arg line="info" />
            <arg line="${SRCDIR}nl/mpi/arbil/" />
            <redirector>
                <outputfilterchain>
                    <tokenfilter>
                        <replaceregex pattern="^" replace="\\\\n" flags="g"/>
                    </tokenfilter>
                    <striplinebreaks/>
                </outputfilterchain>
            </redirector>
        </exec>
        <exec outputproperty="linorg.last.commit.date" executable="svn">
            <arg line="info" />
            <arg line="${SRCDIR}nl/mpi/arbil/" />
            <redirector>
                <outputfilterchain>
                    <linecontainsregexp>
                        <regexp pattern="^Last Changed Date:" />
                    </linecontainsregexp>
                    <tokenfilter>
                        <replaceregex pattern=".*\/([^\/]+)$" replace="\1" flags="g"/>
                    </tokenfilter>
                </outputfilterchain>
            </redirector>
        </exec>
        <exec outputproperty="linorg.build.date" executable="date" />
        <echo file="${SRCDIR}nl/mpi/arbil/LinorgVersion.java" append="false">package nl.mpi.arbil;
public class LinorgVersion {
    String currentMajor = "${linorg.current.major}";
    String currentMinor = "${linorg.current.minor}";
    String currentRevision = "${linorg.current.revision}";
    String lastCommitDate = "${linorg.last.commit.date}";
    String compileDate = "${linorg.build.date}";
    String fullInfo = "${linorg.info.all}";
}
        </echo>
    </target>
    <target name="signlinorg" depends="jar">
        <signjar keystore="${SRCDIR}/../../../../trunk/cert/mpi.keystore" alias="mpi.keyalias" storepass="123456">
            <path>
                <fileset dir="${LIBDIR}" includes="**/*.jar" />
            </path>
        </signjar>
        <signjar jar="${OUTPUTDIR}/arbil.jar"
        keystore="${SRCDIR}/../../../../trunk/cert/mpi.keystore"
        alias="mpi.keyalias" storepass="123456" />
    </target>
    <target name="scp_to_lux09" depends="signlinorg, makeDebPackage">
        <echo file="${OUTPUTDIR}/arbil-${linorg.current.major}-${linorg.current.minor}-current.txt">${linorg.current.revision}</echo>
        <delete file="${OUTPUTDIR}/arbil-${linorg.current.major}-${linorg.current.minor}-${linorg.current.revision}.jar" />
        <move file="${OUTPUTDIR}/arbil.jar" tofile="${OUTPUTDIR}/arbil-${linorg.current.major}-${linorg.current.minor}-${linorg.current.revision}.jar"/>
        <input message="Please enter lux09 username:" addproperty="lux09.user" />
        <input message="Please enter lux09 password:" addproperty="lux09.pw" />
        <scp file="${OUTPUTDIR}/arbil-${linorg.current.major}-${linorg.current.minor}-${linorg.current.revision}.jar" todir="${lux09.user}:${lux09.pw}@lux09.mpi.nl:/data/extweb1/docs/TG/j2se/jnlp/linorg/"/>
        <scp file="${OUTPUTDIR}/arbil-${linorg.current.major}-${linorg.current.minor}-current.txt" todir="${lux09.user}:${lux09.pw}@lux09.mpi.nl:/data/extweb1/docs/TG/j2se/jnlp/linorg/"/>
        <scp file="${distributionDirectory}/arbil_${linorg.current.major}.${linorg.current.minor}-${linorg.current.revision}_all.deb" todir="${lux09.user}:${lux09.pw}@lux09.mpi.nl:/data/extweb1/docs/TG/j2se/jnlp/linorg/"/>

       <!--<scp file="${OUTPUTDIR}/lib/corpusstructure-1.6.1.jar" todir="${lux09.user}:${lux09.pw}@lux09.mpi.nl:/data/extweb1/docs/TG/j2se/jnlp/linorg/lib/"/>
       <scp file="${OUTPUTDIR}/lib/imdiapi-1.0.6.jar" todir="${lux09.user}:${lux09.pw}@lux09.mpi.nl:/data/extweb1/docs/TG/j2se/jnlp/linorg/lib/"/>-->

    </target>
</project>
 
