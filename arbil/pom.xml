
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>nl.mpi</groupId>
    <artifactId>arbil</artifactId>
    <packaging>jar</packaging>
    <version>${arbil.majorVersion}.${arbil.minorVersion}-${arbil.branch}-SNAPSHOT</version>
    <name>Arbil</name>
    <organization> 
	<name>The Language Archive</name> 
	<url>http://tla.mpi.nl/tools/tla-tools</url>
    </organization>
    <scm>
	<developerConnection>scm:svn:https://svn.mpi.nl/LAT/Arbil/trunk/arbil</developerConnection>
	<url>https://trac.mpi.nl/wiki/Arbil</url>
    </scm>
    
    <properties>
	<arbil.majorVersion>2</arbil.majorVersion>
	<arbil.minorVersion>5</arbil.minorVersion>
	<arbil.branch>pretesting</arbil.branch>
	<arbil.application-title>Arbil (pretesting)</arbil.application-title>
	
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<output.jarname>${project.build.finalName}</output.jarname>
	<output.directory>${project.build.directory}</output.directory>
    </properties>
    
    <build>
	<resources>
	    <resource>
		<directory>src/main/resources</directory>
		<filtering>true</filtering>
	    </resource>
	</resources>
	<plugins>
	    <plugin>
		<groupId>org.codehaus.mojo</groupId>
		<artifactId>properties-maven-plugin</artifactId>
		<version>1.0-alpha-2</version>
		<executions>
		    <execution>
			<phase>initialize</phase>
			<goals>
			    <goal>read-project-properties</goal>
			</goals>
			<configuration>
			    <files>
				<file>application.properties</file>
			    </files>
			</configuration>
		    </execution>
		</executions>
	    </plugin>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-compiler-plugin</artifactId>
		<version>2.0.2</version>
		<configuration>
		    <source>1.5</source>
		    <target>1.5</target>
		</configuration>
	    </plugin>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-jar-plugin</artifactId>
		<version>2.3.1</version>
		<configuration>
		    <finalName>${output.jarname}</finalName>
		    <outputDirectory>${output.directory}</outputDirectory>
		    <archive>
			<manifest>
			    <addClasspath>true</addClasspath>
			    <mainClass>${application.mainClass}</mainClass>
			    <classpathPrefix>lib/</classpathPrefix>
			</manifest>
		    </archive>
		    <excludes>
			<exclude>nl/mpi/arbil/resources/**/readme.txt</exclude>
			<exclude>nl/mpi/arbil/resources/icons/svg-files/**</exclude>
			<exclude>nl/mpi/arbil/resources/icons/*.ico</exclude>
			<exclude>nl/mpi/arbil/resources/icons/*.icns</exclude>
			<exclude>nl/mpi/arbil/ui/applet/**</exclude>
		    </excludes>
		</configuration>
	    </plugin>
			<!--copy fallback IMDI templates (call ant task) -->
	    <plugin>
		<artifactId>maven-antrun-plugin</artifactId>
		<version>1.6</version>
		<executions>
		    <execution>
			<phase>compile</phase>
			<configuration>
			    <target>
				<property name="BUILDDIR" value="${project.build.outputDirectory}" />
				<ant antfile="arbil-getfallbackfiles.xml">
				    <target name="getFallbackFiles-x" />
				</ant>
			    </target>
			</configuration>
			<goals>
			    <goal>run</goal>
			</goals>
		    </execution>
		</executions>
	    </plugin>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-dependency-plugin</artifactId>
		<executions>
		    <execution>
			<id>copy-dependencies</id>
			<phase>compile</phase>
			<goals>
			    <goal>copy-dependencies</goal>
			</goals>
			<configuration>
			    <outputDirectory>${output.directory}/lib</outputDirectory>
			    <overWriteReleases>false</overWriteReleases>
			    <overWriteSnapshots>false</overWriteSnapshots>
			    <overWriteIfNewer>true</overWriteIfNewer>
			    <excludeArtifactIds>junit</excludeArtifactIds>
			</configuration>
		    </execution>
		</executions>
	    </plugin>
	    <plugin>
		<groupId>com.google.code.maven-svn-revision-number-plugin</groupId>
		<artifactId>maven-svn-revision-number-plugin</artifactId>
		<version>1.7</version>
		<executions>
		    <execution>
			<goals>
			    <goal>revision</goal>
			</goals>
		    </execution>
		</executions>
		<configuration>
		    <entries>
			<entry>
			    <path>${basedir}/src/main</path>
                            <!-- this will populate "arbil.version.revision" -->
			    <prefix>arbil.version</prefix>
			</entry>
		    </entries>
		</configuration>
	    </plugin>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-release-plugin</artifactId>
		<version>2.2.2</version>
		<configuration>
		    <branchBase>https://svn.mpi.nl/LAT/Arbil/tags</branchBase>
		    <tagBase>https://svn.mpi.nl/LAT/Arbil/tags</tagBase>
		    <branchName>${arbil.majorVersion}.${arbil.minorVersion}.${arbil.version.revision}-${arbil.branch</branchName>
		    <releaseVersion>${arbil.majorVersion}.${arbil.minorVersion}.${arbil.version.revision}-${arbil.branch}</releaseVersion>
		    <developmentVersion>${arbil.majorVersion}.${arbil.minorVersion}-${arbil.branch}</developmentVersion>
		    <checkModificationExcludes>
			<param>ArbilVersion.java</param>
			<param>pom.xml</param>
		    </checkModificationExcludes>
		    <remoteTagging>false</remoteTagging>
		    <updateBranchVersions>true</updateBranchVersions>
		    <updateWorkingCopyVersions>false</updateWorkingCopyVersions>
		</configuration>
	    </plugin>
	    <plugin>
		<groupId>com.keyboardsamurais.maven</groupId>
		<artifactId>maven-timestamp-plugin</artifactId>
		<configuration>
		    <propertyName>arbil.build-date</propertyName>
		    <timestampPattern>EEE MMM dd HH:mm:ss z yyyy</timestampPattern> //"Mon Jan 16 10:25:00 CET 2012";
		</configuration>
		<executions>
		    <execution>
			<goals>
			    <goal>create</goal>
			</goals>
		    </execution>
		</executions>
	    </plugin>
	</plugins>
    </build>
    <dependencies>
	<dependency>
	    <groupId>org.apache.xmlbeans</groupId>
	    <artifactId>xmlbeans</artifactId>
	    <version>2.4.0</version>
	    <scope>compile</scope>
	</dependency>
	<dependency>
	    <groupId>nl.mpi</groupId>
	    <artifactId>typechecker</artifactId>
	    <version>1.6.6</version>
	</dependency>
	<dependency>
	    <groupId>nl.nikhef</groupId>
	    <artifactId>slcshttps</artifactId>
	    <version>0.2</version>
	</dependency>
	<dependency>
	    <groupId>nl.mpi</groupId>
	    <artifactId>imdi-api</artifactId>
	    <version>1.1.2</version>
	</dependency>
	<dependency>
	    <groupId>nl.mpi</groupId>
	    <artifactId>mpi-util</artifactId>
	    <version>1.0.0</version>
	</dependency>	
	<dependency>
	    <groupId>junit</groupId>
	    <artifactId>junit</artifactId>
	    <version>4.6</version>
	    <scope>test</scope>
	</dependency>
	<dependency>
	    <groupId>net.sf.saxon</groupId>
	    <artifactId>Saxon-HE</artifactId>
	    <version>9.4</version>
	</dependency>
	<dependency>
	    <groupId>xerces</groupId>
	    <artifactId>xercesImpl</artifactId>
	    <version>2.9.0</version>
	</dependency>
	<dependency>
	    <groupId>xalan</groupId>
	    <artifactId>xalan</artifactId>
	    <version>2.7.1</version>
	</dependency>
	<dependency>
	    <groupId>commons-digester</groupId>
	    <artifactId>commons-digester</artifactId>
	    <version>2.0</version>
	</dependency>
	<dependency>
	    <groupId>log4j</groupId>
	    <artifactId>log4j</artifactId>
	    <version>1.2.16</version>
	</dependency>
	<dependency>
	    <groupId>${project.groupId}</groupId>
	    <artifactId>corpusstructure-api</artifactId>
	    <version>1.7.3</version>
	</dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>kinnate-plugins-core</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>
    <repositories>
	<repository>
	    <id>MPI</id>
	    <name>MPI LAT Repository</name>
	    <url>http://lux15.mpi.nl/nexus/content/groups/public/</url>
	</repository>
    </repositories>
    <reporting>
	<plugins>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-surefire-report-plugin</artifactId>
		<version>2.7.2</version>
		<configuration>
		    <forkMode>never</forkMode>
		    <argLine>-Dwt.headless</argLine>
		    <argLine>-Djava.awt.headless=true</argLine>
		</configuration>
	    </plugin>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-jxr-plugin</artifactId>
		<version>2.3</version>
	    </plugin>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-javadoc-plugin</artifactId>
		<version>2.8.1</version>
	    </plugin>
	    <plugin>
		<groupId>org.codehaus.mojo</groupId>
		<artifactId>findbugs-maven-plugin</artifactId>
		<version>2.5.1</version>
		<configuration>
		    <findbugsXmlOutput>True</findbugsXmlOutput>
		    <threshold>Normal</threshold>
		    <effort>Min</effort>
		</configuration>
	    </plugin>
	</plugins>
    </reporting>
    <pluginRepositories>
	<pluginRepository>
	    <id>maven-timestamp</id>
	    <url>http://maven-timestamp-plugin.googlecode.com/svn/trunk/repository</url>
	</pluginRepository>
    </pluginRepositories>
    
    <profiles>
	<profile>
	    <id>generate-help</id>
	    <properties>
		<output.help.directory.base>${basedir}/target/generated-resources/help</output.help.directory.base>
		<output.help.directory.result>${output.help.directory.base}/arbil/</output.help.directory.result>
		<resources.help.directory>${basedir}/target/classes/nl/mpi/arbil/resources/html/help</resources.help.directory>
	    </properties>
	    <build>
		<plugins>
		    <!-- Plugin to create HTML form DocBook sources -->
		    <plugin>
			<groupId>com.agilejava.docbkx</groupId>
			<artifactId>docbkx-maven-plugin</artifactId>
			<version>2.0.14</version>
			<dependencies>
			    <dependency>
				<groupId>org.docbook</groupId>
				<artifactId>docbook-xml</artifactId>
				<version>4.4</version>
				<scope>runtime</scope>
			    </dependency>
			</dependencies>
			<executions>
			    <execution>
				<goals>
				    <goal>generate-xhtml</goal>
				</goals>
				<phase>generate-resources</phase>
			    </execution>
			</executions>
			<configuration>
			    <chunkedOutput>true</chunkedOutput>
			    <sourceDirectory>${basedir}/src/main/docbook</sourceDirectory>
			    <targetDirectory>${output.help.directory.base}</targetDirectory>
			    <xhtmlCustomization>${basedir}/src/main/docbook/mydocbook2xhtml.xsl</xhtmlCustomization>
<!--			    <includes>arbil.xml</includes>-->
			</configuration>
		    </plugin>
		    <!-- Plugin to create index XML from DocBook HTML -->
		    <plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>xml-maven-plugin</artifactId>
			<version>1.0</version>
			<executions>
			    <execution>
				<goals>
				    <goal>transform</goal>
				</goals>
				<phase>generate-resources</phase>
			    </execution>
			</executions>
			<configuration>
			    <catalogs>
				<catalog>${basedir}/src/main/docbook/catalog/catalog.xml</catalog>
			    </catalogs>
			    <transformationSets>
				<!-- Transform the index xhtml to an XML that's easy to process -->
				<transformationSet>
				    <dir>${output.help.directory.result}</dir>
				    <outputDir>${resources.help.directory}</outputDir> <!-- output to resources directory -->
				    <stylesheet>${basedir}/src/main/docbook/helptoc.xsl</stylesheet>
				    <includes>
					<include>arbil.html</include>
				    </includes>
				    <fileMappers>
					<!-- Map arbil.html -> arbil.xml -->
					<fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
					    <targetExtension>.xml</targetExtension>
					</fileMapper>
				    </fileMappers>
				</transformationSet>
				<!-- Strip everything but body from other html files -->
				<transformationSet>
				    <dir>${output.help.directory.result}</dir>
				    <outputDir>${resources.help.directory}</outputDir> <!-- output to resources directory -->
				    <stylesheet>${basedir}/src/main/docbook/extractbody.xsl</stylesheet>
				    <includes>
					<include>*.html</include>
				    </includes>
				    <excludes>
					<exclude>arbil.html</exclude>
				    </excludes>
				</transformationSet>
			    </transformationSets>
			</configuration>
		    </plugin>
		    <plugin>
			<groupId>nl.mpi</groupId>
			<artifactId>imgscalr-maven-plugin</artifactId>
			<version>1.0-SNAPSHOT</version>
			<executions>
			    <execution>
				<phase>generate-resources</phase>
				<goals>
				    <goal>scale</goal>
				</goals>
			    </execution>
			</executions>
			<configuration>
			    <files>
				<directory>${basedir}/src/main/docbook/images</directory>
				<includes>
				    <!-- We don't want any other file types (e.g. svg) because Swing won't support them -->
				    <include>%regex[(?i).*\.jpg$]</include>
				    <include>%regex[(?i).*\.png$]</include>
				</includes>
			    </files>
			    <outputDirectory>${resources.help.directory}/images</outputDirectory>
			    <targetWidth>400</targetWidth>
			</configuration>
		    </plugin>		    
		</plugins>

		<!-- FO stuff -->
<!--		<plugin>
			<groupId>com.agilejava.docbkx</groupId>
			<artifactId>docbkx-maven-plugin</artifactId>
			<version>2.0.14</version>
			<dependencies>
			    <dependency>
				<groupId>org.docbook</groupId>
				<artifactId>docbook-xml</artifactId>
				<version>4.4</version>
				<scope>runtime</scope>
			    </dependency>
			</dependencies>
			<executions>
			    <execution>
				<goals>
				    <goal>generate-xhtml</goal>
			    <goal>generate-html</goal>
			    <goal>generate-pdf</goal>
				</goals>
				<phase>generate-resources</phase>
			<phase>pre-site</phase>
			    </execution>
			</executions>
			<configuration>
			    <chunkedOutput>true</chunkedOutput>
			    <targetDirectory>${output.help.directory.base}</targetDirectory>
			    <xhtmlCustomization>src/docbkx/mydocbook2xhtml.xsl</xhtmlCustomization>
		    <foCustomization>src/docbkx/mydocbook2fo.xsl</foCustomization>
		    <htmlCustomization>src/docbkx/mydocbook2html.xsl</htmlCustomization>
		    <externalFOPConfiguration>src/docbkx/fop.xconf</externalFOPConfiguration>
		    <imgSrcPath>src/docbkx/images/</imgSrcPath>
		    <symbolFontFamily>Arial Unicode MS</symbolFontFamily>		    
		    <fonts>
			<font>
			    <name>Arial Unicode MS</name>
			    <style>normal</style>
			    <weight>normal</weight>
			    <embedFile>src/docbkx/Arial-Unicode.ttf</embedFile>
			    <metricsFile>target/fonts/Arial-Unicode-metrics.xml</metricsFile>
			</font>
		    </fonts>
			</configuration>
		    </plugin>-->
	    <!-- Generate font metrics file -->
<!--	    <plugin>
		<groupId>com.agilejava.docbkx</groupId>
		<artifactId>docbkx-fop-support</artifactId>
		<version>2.0.14</version>
		<executions>
		    <execution>
			<phase>generate-resources</phase>
			<goals>
			    <goal>generate</goal>
			</goals>
			<configuration>
			    <ansi>true</ansi>
			</configuration>
		    </execution>
		</executions>
	    </plugin>-->
	    </build>
	</profile>
    </profiles>   
</project>
